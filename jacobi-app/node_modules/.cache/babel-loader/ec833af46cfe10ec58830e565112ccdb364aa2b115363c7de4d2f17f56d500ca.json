{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dllac\\\\Documents\\\\App-React-JS\\\\Jacobi-Metodo\\\\jacobi-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Certifique-se de que o CSS esteja importado corretamente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [matrixSize, setMatrixSize] = useState(2);\n  const [matrix, setMatrix] = useState([]);\n  const [vector, setVector] = useState([]);\n  const [tolerance, setTolerance] = useState(0.01);\n  const [maxIter, setMaxIter] = useState(100);\n  const [solution, setSolution] = useState([]);\n  const [iterations, setIterations] = useState(0);\n  const handleMatrixChange = (i, j, value) => {\n    const newMatrix = [...matrix];\n    if (!newMatrix[i]) newMatrix[i] = [];\n    newMatrix[i][j] = parseFloat(value) || 0;\n    setMatrix(newMatrix);\n  };\n  const handleVectorChange = (i, value) => {\n    const newVector = [...vector];\n    newVector[i] = parseFloat(value) || 0;\n    setVector(newVector);\n  };\n  const gaussJacobi = (A, b, x0, tol, max_iter) => {\n    const n = b.length;\n    let x = [...x0];\n    let count = 0;\n    for (let k = 0; k < max_iter; k++) {\n      const x_new = Array(n).fill(0);\n      for (let i = 0; i < n; i++) {\n        let s = 0;\n        for (let j = 0; j < n; j++) {\n          if (j !== i) s += A[i][j] * x[j];\n        }\n        x_new[i] = (b[i] - s) / A[i][i];\n      }\n      count++;\n      if (Math.max(...x_new.map((val, idx) => Math.abs(val - x[idx]))) < tol) {\n        setIterations(count);\n        return x_new;\n      }\n      x = x_new;\n    }\n    setIterations(count);\n    return x;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Suponha que você tenha uma função para calcular a solução\n    const {\n      newSolution,\n      iterCount\n    } = calculateGaussJacobi(matrixSize, tolerance, maxIter);\n    setSolution(newSolution);\n    setIterations(iterCount);\n\n    // Calcule o erro relativo (apenas um exemplo)\n    const trueSolution = [/* Solução Verdadeira Aqui */]; // Defina a solução verdadeira aqui\n    const error = trueSolution.map((val, idx) => Math.abs((val - newSolution[idx]) / val));\n    const maxError = Math.max(...error);\n    setRelativeError(maxError); // Armazena o erro relativo máximo\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"M\\xE9todo de Gauss-Jacobi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"App-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-size-matriz\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"App-size-matriz-label\",\n            children: \"Tamanho da Matriz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-size-matriz-numer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: matrixSize,\n              onChange: e => setMatrixSize(parseInt(e.target.value) || 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-sub-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Matriz A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), Array.from({\n          length: matrixSize\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Array.from({\n            length: matrixSize\n          }).map((_, j) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => handleMatrixChange(i, j, e.target.value),\n            placeholder: `A[${i + 1}][${j + 1}]`\n          }, `${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vetor b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), Array.from({\n          length: matrixSize\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => handleVectorChange(i, e.target.value),\n          placeholder: `b[${i + 1}]`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Toler\\xE2ncia:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: tolerance,\n              onChange: e => setTolerance(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"N\\xFAmero M\\xE1ximo de Itera\\xE7\\xF5es:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxIter,\n              onChange: e => setMaxIter(parseInt(e.target.value) || 100)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Calcular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), solution.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Solu\\xE7\\xE3o Aproximada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: solution.map((val, idx) => `x[${idx + 1}] = ${val.toFixed(4)}`).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantidade de Itera\\xE7\\xF5es: \", iterations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xC1lgebra Linear - BSI UFRA | 2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"muWJKL6HprcfKlQZphJfJqQEV18=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","matrixSize","setMatrixSize","matrix","setMatrix","vector","setVector","tolerance","setTolerance","maxIter","setMaxIter","solution","setSolution","iterations","setIterations","handleMatrixChange","i","j","value","newMatrix","parseFloat","handleVectorChange","newVector","gaussJacobi","A","b","x0","tol","max_iter","n","length","x","count","k","x_new","Array","fill","s","Math","max","map","val","idx","abs","handleSubmit","event","preventDefault","newSolution","iterCount","calculateGaussJacobi","trueSolution","error","maxError","setRelativeError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","e","parseInt","target","from","_","placeholder","step","toFixed","join","_c","$RefreshReg$"],"sources":["C:/Users/dllac/Documents/App-React-JS/Jacobi-Metodo/jacobi-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Certifique-se de que o CSS esteja importado corretamente\n\nfunction App() {\n  const [matrixSize, setMatrixSize] = useState(2);\n  const [matrix, setMatrix] = useState([]);\n  const [vector, setVector] = useState([]);\n  const [tolerance, setTolerance] = useState(0.01);\n  const [maxIter, setMaxIter] = useState(100);\n  const [solution, setSolution] = useState([]);\n  const [iterations, setIterations] = useState(0);\n\n  const handleMatrixChange = (i, j, value) => {\n    const newMatrix = [...matrix];\n    if (!newMatrix[i]) newMatrix[i] = [];\n    newMatrix[i][j] = parseFloat(value) || 0;\n    setMatrix(newMatrix);\n  };\n\n  const handleVectorChange = (i, value) => {\n    const newVector = [...vector];\n    newVector[i] = parseFloat(value) || 0;\n    setVector(newVector);\n  };\n\n  const gaussJacobi = (A, b, x0, tol, max_iter) => {\n    const n = b.length;\n    let x = [...x0];\n    let count = 0;\n    for (let k = 0; k < max_iter; k++) {\n      const x_new = Array(n).fill(0);\n      for (let i = 0; i < n; i++) {\n        let s = 0;\n        for (let j = 0; j < n; j++) {\n          if (j !== i) s += A[i][j] * x[j];\n        }\n        x_new[i] = (b[i] - s) / A[i][i];\n      }\n      count++;\n      if (Math.max(...x_new.map((val, idx) => Math.abs(val - x[idx]))) < tol) {\n        setIterations(count);\n        return x_new;\n      }\n      x = x_new;\n    }\n    setIterations(count);\n    return x;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Suponha que você tenha uma função para calcular a solução\n    const { newSolution, iterCount } = calculateGaussJacobi(matrixSize, tolerance, maxIter);\n    setSolution(newSolution);\n    setIterations(iterCount);\n\n    // Calcule o erro relativo (apenas um exemplo)\n    const trueSolution = [/* Solução Verdadeira Aqui */]; // Defina a solução verdadeira aqui\n    const error = trueSolution.map((val, idx) => Math.abs((val - newSolution[idx]) / val));\n    const maxError = Math.max(...error);\n    setRelativeError(maxError); // Armazena o erro relativo máximo\n  };\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Método de Gauss-Jacobi</h1>\n      </header>\n      <main className=\"App-main\">\n        <form className='App-form' onSubmit={handleSubmit}>\n          <div className='App-size-matriz'>\n            <label className='App-size-matriz-label'>\n              Tamanho da Matriz\n            </label>\n            <div className='App-size-matriz-numer'>\n              <input\n                type=\"number\"\n                value={matrixSize}\n                onChange={(e) => setMatrixSize(parseInt(e.target.value) || 2)}\n              />\n            </div>\n          </div>\n\n          <div className='App-sub-header'>\n            <h2>Matriz A</h2>\n          </div>\n          {Array.from({ length: matrixSize }).map((_, i) => (\n            <div key={i}>\n              {Array.from({ length: matrixSize }).map((_, j) => (\n                <input\n                  key={`${i}-${j}`}\n                  type=\"number\"\n                  onChange={(e) => handleMatrixChange(i, j, e.target.value)}\n                  placeholder={`A[${i + 1}][${j + 1}]`}\n                />\n              ))}\n            </div>\n          ))}\n\n          <h2>Vetor b</h2>\n          {Array.from({ length: matrixSize }).map((_, i) => (\n            <input\n              key={i}\n              type=\"number\"\n              onChange={(e) => handleVectorChange(i, e.target.value)}\n              placeholder={`b[${i + 1}]`}\n            />\n          ))}\n\n          <div>\n            <label>\n              Tolerância:\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={tolerance}\n                onChange={(e) => setTolerance(parseFloat(e.target.value))}\n              />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Número Máximo de Iterações:\n              <input\n                type=\"number\"\n                value={maxIter}\n                onChange={(e) => setMaxIter(parseInt(e.target.value) || 100)}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\">Calcular</button>\n        </form>\n\n        {solution.length > 0 && (\n          <div>\n            <h2>Solução Aproximada:</h2>\n            <p>{solution.map((val, idx) => `x[${idx + 1}] = ${val.toFixed(4)}`).join(', ')}</p>\n            <p>Quantidade de Iterações: {iterations}</p>\n          </div>\n        )}\n      </main>\n      <footer className=\"App-footer\">\n        <p>Álgebra Linear - BSI UFRA | 2023</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}