{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dllac\\\\Documents\\\\App-React-JS\\\\Jacobi-Metodo\\\\jacobi-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport './App.css';\nimport './alert.css';\nimport PdfGenerator from './components/PdfGenerator'; // Ajuste o caminho se necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [matrixSize, setMatrixSize] = useState(3);\n  const [tolerance, setTolerance] = useState(0.01);\n  const [maxIter, setMaxIter] = useState(50);\n  const [matrix, setMatrix] = useState([]);\n  const [vectorB, setVectorB] = useState([]);\n  const [solution, setSolution] = useState([]);\n  const [iterations, setIterations] = useState(0);\n  const [initialGuess, setInitialGuess] = useState(''); // Estado para o chute inicial\n  const [iterationResults, setIterationResults] = useState([]);\n  const handleMatrixChange = (i, j, value) => {\n    const newMatrix = [...matrix];\n    if (!newMatrix[i]) {\n      newMatrix[i] = [];\n    }\n    newMatrix[i][j] = parseFloat(value);\n    setMatrix(newMatrix);\n  };\n  const handleVectorChange = (i, value) => {\n    const newVector = [...vectorB];\n    newVector[i] = parseFloat(value);\n    setVectorB(newVector);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Verifica se todos os campos necessários estão preenchidos\n    const isMatrixFilled = matrix.every(row => row && row.every(value => !isNaN(value)));\n    const isVectorFilled = vectorB.length === matrixSize && vectorB.every(value => !isNaN(value));\n    const isInitialGuessFilled = initialGuess.trim() !== '';\n    if (!isMatrixFilled || !isVectorFilled || !isInitialGuessFilled || !tolerance || !maxIter) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Atenção!',\n        text: 'Por favor, preencha todos os campos obrigatórios.'\n      });\n      return;\n    }\n\n    // Lógica do Método de Gauss-Jacobi\n    const result = gaussJacobiMethod(matrix, vectorB, tolerance, maxIter, initialGuess);\n    setSolution(result.solution);\n    setIterations(result.iterations);\n    setIterationResults(result.iterationResults); // Armazena os resultados das iterações\n  };\n  const gaussJacobiMethod = (A, b, tol, maxIter, initialGuess) => {\n    let x = initialGuess ? initialGuess.split(' ').map(Number) : new Array(b.length).fill(0);\n    let iterations = 0;\n    let error = tol + 1;\n    const allIterations = []; // Para armazenar todos os resultados\n\n    while (error > tol && iterations < maxIter) {\n      const xNew = [...x];\n      for (let i = 0; i < A.length; i++) {\n        let sum = b[i];\n        for (let j = 0; j < A.length; j++) {\n          if (i !== j) {\n            sum -= A[i][j] * x[j];\n          }\n        }\n        xNew[i] = sum / A[i][i];\n      }\n      const previousX = [...x];\n      error = Math.max(...xNew.map((xi, idx) => Math.abs(xi - previousX[idx])));\n      x = xNew;\n      iterations++;\n      allIterations.push([...x]); // Armazena os resultados de cada iteração\n    }\n\n    // Verifica se o método convergiu\n    if (error > tol) {\n      Swal.fire({\n        icon: 'info',\n        title: 'Convergência não alcançada!',\n        text: 'O método de Gauss-Jacobi não convergiu dentro do número máximo de iterações.'\n      });\n    }\n    return {\n      solution: x,\n      iterations,\n      iterationResults: allIterations\n    };\n  };\n  const handleClear = () => {\n    // Verifica se todos os campos estão vazios\n    const allInputsEmpty = !matrix.flat().some(value => value) && !vectorB.some(value => value) && !initialGuess;\n    if (allInputsEmpty) {\n      Swal.fire({\n        icon: 'info',\n        title: 'Todos os campos já estão limpos.',\n        text: 'Nenhum dado para limpar.'\n      });\n    } else {\n      // Limpa todos os campos\n      setMatrix([]);\n      setVectorB([]);\n      setSolution([]);\n      setIterations(0);\n      setInitialGuess('');\n      setIterationResults([]);\n      setTolerance(0.01);\n      setMaxIter(50);\n      setMatrixSize(3);\n      Swal.fire({\n        icon: 'success',\n        title: 'Campos limpos!',\n        text: 'Todos os campos foram limpos com sucesso.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"M\\xE9todo de Gauss-Jacobi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"App-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-size-matriz\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"App-size-matriz-label\",\n            children: \"Tamanho da Matriz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-size-matriz-numer\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: matrixSize,\n              onChange: e => setMatrixSize(parseInt(e.target.value) || 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-sub-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"App-title-h2\",\n            children: \"Matriz A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), Array.from({\n          length: matrixSize\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"matrix-row\",\n          children: Array.from({\n            length: matrixSize\n          }).map((_, j) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => handleMatrixChange(i, j, e.target.value),\n            placeholder: `A[${i + 1}][${j + 1}]`,\n            className: \"matrix-input\"\n          }, `${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"App-title-h2\",\n          children: \"Vetor b\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vector-container\",\n          children: Array.from({\n            length: matrixSize\n          }).map((_, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => handleVectorChange(i, e.target.value),\n            placeholder: `b[${i + 1}]`,\n            className: \"vector-input\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"App-label\",\n              children: \"Chute Inicial (opcional):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: initialGuess,\n              onChange: e => setInitialGuess(e.target.value),\n              placeholder: \"ex: 1 1 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"App-label\",\n              children: \"Toler\\xE2ncia:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: tolerance,\n              onChange: e => setTolerance(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"App-label\",\n              children: \"N M\\xE1x de Itera\\xE7\\xF5es:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxIter,\n              onChange: e => setMaxIter(parseInt(e.target.value) || 100)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => window.location.reload(),\n            children: \"Limpar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Calcular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), solution.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultado-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"titulo-resultado\",\n          children: \"Solu\\xE7\\xE3o Aproximada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"solucao\",\n          children: solution.map((val, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"x\", /*#__PURE__*/_jsxDEV(\"sub\", {\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 20\n            }, this), \" = \", val.toFixed(4), idx < solution.length - 1 && ', ']\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"iteracoes\",\n          children: [\"Quantidade de Itera\\xE7\\xF5es: \", iterations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PdfGenerator, {\n          results: iterationResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xC1lgebra Linear - BSI UFRA | 2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H/HMsZXWh+F+nRhVrZmJ9HdLlug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Swal","PdfGenerator","jsxDEV","_jsxDEV","App","_s","matrixSize","setMatrixSize","tolerance","setTolerance","maxIter","setMaxIter","matrix","setMatrix","vectorB","setVectorB","solution","setSolution","iterations","setIterations","initialGuess","setInitialGuess","iterationResults","setIterationResults","handleMatrixChange","i","j","value","newMatrix","parseFloat","handleVectorChange","newVector","handleSubmit","event","preventDefault","isMatrixFilled","every","row","isNaN","isVectorFilled","length","isInitialGuessFilled","trim","fire","icon","title","text","result","gaussJacobiMethod","A","b","tol","x","split","map","Number","Array","fill","error","allIterations","xNew","sum","previousX","Math","max","xi","idx","abs","push","handleClear","allInputsEmpty","flat","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","e","parseInt","target","from","_","placeholder","step","onClick","window","location","reload","val","toFixed","results","_c","$RefreshReg$"],"sources":["C:/Users/dllac/Documents/App-React-JS/Jacobi-Metodo/jacobi-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport './App.css';\nimport './alert.css';\nimport PdfGenerator from './components/PdfGenerator'; // Ajuste o caminho se necessário\n\n\n\nfunction App() {\n  const [matrixSize, setMatrixSize] = useState(3);\n  const [tolerance, setTolerance] = useState(0.01);\n  const [maxIter, setMaxIter] = useState(50);\n  const [matrix, setMatrix] = useState([]);\n  const [vectorB, setVectorB] = useState([]);\n  const [solution, setSolution] = useState([]);\n  const [iterations, setIterations] = useState(0);\n  const [initialGuess, setInitialGuess] = useState(''); // Estado para o chute inicial\n  const [iterationResults, setIterationResults] = useState([]);\n\n  const handleMatrixChange = (i, j, value) => {\n    const newMatrix = [...matrix];\n    if (!newMatrix[i]) {\n      newMatrix[i] = [];\n    }\n    newMatrix[i][j] = parseFloat(value);\n    setMatrix(newMatrix);\n  };\n\n  const handleVectorChange = (i, value) => {\n    const newVector = [...vectorB];\n    newVector[i] = parseFloat(value);\n    setVectorB(newVector);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Verifica se todos os campos necessários estão preenchidos\n    const isMatrixFilled = matrix.every(row => row && row.every(value => !isNaN(value)));\n    const isVectorFilled = vectorB.length === matrixSize && vectorB.every(value => !isNaN(value));\n    const isInitialGuessFilled = initialGuess.trim() !== '';\n\n    if (!isMatrixFilled || !isVectorFilled || !isInitialGuessFilled || !tolerance || !maxIter) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Atenção!',\n        text: 'Por favor, preencha todos os campos obrigatórios.',\n      });\n      return;\n    }\n\n    // Lógica do Método de Gauss-Jacobi\n    const result = gaussJacobiMethod(matrix, vectorB, tolerance, maxIter, initialGuess);\n\n    setSolution(result.solution);\n    setIterations(result.iterations);\n    setIterationResults(result.iterationResults); // Armazena os resultados das iterações\n  };\n\n  const gaussJacobiMethod = (A, b, tol, maxIter, initialGuess) => {\n    let x = initialGuess ? initialGuess.split(' ').map(Number) : new Array(b.length).fill(0);\n    let iterations = 0;\n    let error = tol + 1;\n    const allIterations = []; // Para armazenar todos os resultados\n\n    while (error > tol && iterations < maxIter) {\n      const xNew = [...x];\n      for (let i = 0; i < A.length; i++) {\n        let sum = b[i];\n        for (let j = 0; j < A.length; j++) {\n          if (i !== j) {\n            sum -= A[i][j] * x[j];\n          }\n        }\n        xNew[i] = sum / A[i][i];\n      }\n\n      const previousX = [...x];\n      error = Math.max(...xNew.map((xi, idx) => Math.abs(xi - previousX[idx])));\n      x = xNew;\n      iterations++;\n      allIterations.push([...x]); // Armazena os resultados de cada iteração\n    }\n\n    // Verifica se o método convergiu\n    if (error > tol) {\n      Swal.fire({\n        icon: 'info',\n        title: 'Convergência não alcançada!',\n        text: 'O método de Gauss-Jacobi não convergiu dentro do número máximo de iterações.',\n      });\n    }\n\n    return { solution: x, iterations, iterationResults: allIterations };\n  };\n\n  const handleClear = () => {\n    // Verifica se todos os campos estão vazios\n    const allInputsEmpty = !matrix.flat().some(value => value) && !vectorB.some(value => value) && !initialGuess;\n\n    if (allInputsEmpty) {\n      Swal.fire({\n        icon: 'info',\n        title: 'Todos os campos já estão limpos.',\n        text: 'Nenhum dado para limpar.',\n      });\n    } else {\n      // Limpa todos os campos\n      setMatrix([]);\n      setVectorB([]);\n      setSolution([]);\n      setIterations(0);\n      setInitialGuess('');\n      setIterationResults([]);\n      setTolerance(0.01);\n      setMaxIter(50);\n      setMatrixSize(3);\n      Swal.fire({\n        icon: 'success',\n        title: 'Campos limpos!',\n        text: 'Todos os campos foram limpos com sucesso.',\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Método de Gauss-Jacobi</h1>\n      </header>\n      <main className=\"App-main\">\n        <form className='App-form' onSubmit={handleSubmit}>\n          <div className='App-size-matriz'>\n            <label className='App-size-matriz-label'>\n              Tamanho da Matriz\n            </label>\n            <div className='App-size-matriz-numer'>\n              <input\n                type=\"number\"\n                value={matrixSize}\n                onChange={(e) => setMatrixSize(parseInt(e.target.value) || 2)}\n              />\n            </div>\n          </div>\n\n          <div className='App-sub-header'>\n            <h2 className='App-title-h2'>Matriz A</h2>\n          </div>\n          {Array.from({ length: matrixSize }).map((_, i) => (\n            <div key={i} className=\"matrix-row\">\n              {Array.from({ length: matrixSize }).map((_, j) => (\n                <input\n                  key={`${i}-${j}`}\n                  type=\"text\"\n                  onChange={(e) => handleMatrixChange(i, j, e.target.value)}\n                  placeholder={`A[${i + 1}][${j + 1}]`}\n                  className=\"matrix-input\"\n                />\n              ))}\n            </div>\n          ))}\n\n          <h2 className='App-title-h2'>Vetor b</h2>\n          <div className=\"vector-container\">\n            {Array.from({ length: matrixSize }).map((_, i) => (\n              <input\n                key={i}\n                type=\"text\"\n                onChange={(e) => handleVectorChange(i, e.target.value)}\n                placeholder={`b[${i + 1}]`}\n                className=\"vector-input\"\n              />\n            ))}\n          </div>\n\n          <div className=\"input-row\">\n            <div className=\"input-column\">\n              <label className='App-label'>Chute Inicial (opcional):</label>\n              <input\n                type=\"text\"\n                value={initialGuess}\n                onChange={(e) => setInitialGuess(e.target.value)}\n                placeholder=\"ex: 1 1 1\"\n              />\n            </div>\n            <div className=\"input-column\">\n              <label className='App-label'>Tolerância:</label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={tolerance}\n                onChange={(e) => setTolerance(parseFloat(e.target.value))}\n              />\n            </div>\n            <div className=\"input-column\">\n              <label className='App-label'>N Máx de Iterações:</label>\n              <input\n                type=\"number\"\n                value={maxIter}\n                onChange={(e) => setMaxIter(parseInt(e.target.value) || 100)}\n              />\n            </div>\n          </div>\n          <div className=\"button-container\">\n            <button type=\"button\" onClick={() => window.location.reload()}>Limpar</button>\n            <button type=\"submit\">Calcular</button>\n          </div>\n        </form>\n\n        {solution.length > 0 && (\n          <div className=\"resultado-container\">\n            <h2 className=\"titulo-resultado\">Solução Aproximada</h2>\n            <p className=\"solucao\">\n              {solution.map((val, idx) => (\n                <span key={idx}>\n                  x<sub>{idx + 1}</sub> = {val.toFixed(4)}\n                  {idx < solution.length - 1 && ', '}\n                </span>\n              ))}\n            </p>\n            <p className=\"iteracoes\">Quantidade de Iterações: {iterations}</p>\n            <PdfGenerator results={iterationResults} /> {/* Componente para gerar PDF */}\n          </div>\n        )}\n\n      </main>\n\n      <footer className=\"App-footer\">\n        <p>Álgebra Linear - BSI UFRA | 2023</p>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}